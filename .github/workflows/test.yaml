name: Test

on:
  push:

env:
  ZIPLINE_URL: http://localhost:3000/

jobs:
  build:
    name: "Build"
    uses: ./.github/workflows/build.yaml
    if: ${{ !contains(github.event.head_commit.message, '#notest') }}
    permissions:
      contents: write
    with:
      name: test

  test:
    name: Test
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, '#notest') }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        #version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        version: ["3.13"]
    runs-on: ${{ matrix.os }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: postgres
        ports:
          - 5432:5432

      zipline:
        image: ghcr.io/diced/zipline:latest
        env:
          DEBUG: true
          CORE_PORT: 3000
          CORE_RETURN_HTTPS: false
          CORE_SECRET: NasMA3ByEXw5P65Gcx8BZOB9QhJN5qom
          DATABASE_URL: postgres://postgres:postgres@postgres/postgres
        ports:
          - 3000:3000

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Download Artifact"
        uses: actions/download-artifact@v4
        with:
          name: test
          path: dist

      - name: "Setup Python ${{ matrix.version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}
          cache: "pip"

      - name: "Requirements ${{ matrix.version }}"
        run: |
          python -m pip install -U pip
          python -m pip install -U pip pytest psycopg2

      - name: "Install ${{ matrix.version }}"
        run: |
          #python -m pip install -e .
          python -m pip install dist/*.whl

      #- name: "Debug ${{ matrix.version }}"
      #  run: |
      #    ls -lAhR .

      - name: "Test ${{ matrix.version }}"
        run: |
          export ZIPLINE_TOKEN=$(python3 get_test_token.py)
          echo "ZIPLINE_TOKEN: ${ZIPLINE_TOKEN}"
          zipline README.md
